@using Examine
@using Examine.SearchCriteria
@using umbraco.MacroEngines;
@inherits umbraco.MacroEngines.DynamicNodeContext

@{
    //Get the values posted from the form
    var searchTerm = Request.Form["searchTerm"];

    //Check if searchQuery is null from the posted form data...
    if (searchTerm == null)
    {
        //If it is null then the form was not posted and the page was visited directly
        <p>Please use the search box</p>

        //Stop all other code running in this Macro
        return;
    }
    
    var searcher = ExamineManager.Instance.SearchProviderCollection["RazorSiteSearcher"];
    var searchCriteria = searcher.CreateSearchCriteria();
    var query = searchCriteria.GroupedOr(new string[] {"nodeName", "bodyText"}, searchTerm).Compile();
    var searchResults = searcher.Search(query);
    var noResults       = searchResults.Count();
    
    <p>You searched for "@searchTerm", and found <span>@noResults</span> results:</p>
    
    <ul class="search-results">
        @foreach (var result in searchResults)
        {
            var node = Library.NodeById(result.Id);
            var nodeName = result.Fields["nodeName"];
            var nodeUrl = umbraco.library.NiceUrl(node.Id);
                
            string alias = node.NodeTypeAlias;
            string iconImage = "";
            string itemType = "";
            string cssClass = "";
            var content = "";
            
            //assign an icon to the result:
            switch(alias)
            {
                case "feature":
                case "article":
                case "serviceItem":
                    iconImage = "/media/1020/Doc-icon.png";
                    itemType = "Content-item";
                    cssClass = "orange";                 
                    break;
                
                default:
                    iconImage = "/media/1018/Web-HTML-icon.png";
                    itemType = "Web-page";
                    cssClass = "blue";
                    break;
            }

            switch (alias)
            {
                case "feature":
                    content = umbraco.library.RemoveFirstParagraphTag(node.featureOverview.ToString());
                    break;
                    
                case "article":
                    content = umbraco.library.RemoveFirstParagraphTag(node.articleOverview.ToString());
                    break;
                    
                case "serviceItem":
                    content = umbraco.library.RemoveFirstParagraphTag(node.serviceOverview.ToString());
                    break;                
                    
                default:
                    iconImage = "/media/1018/Web-HTML-icon.png";
                    itemType = "Web-page";
                    break;
            }
            
            
            <li>
                @*<img class="search-result-icon" src="@iconImage" />*@
                <div class="search-result-content">
                    <div class="search-result-header"><a href="@node.Url" class="@cssClass">@nodeName</a></div>
                    <div class="field-container">
                        @*<div class="label">Type:</div>*@
                        <div class="field">@content</div>
                    </div>
                </div>
                <div class="clear"></div>
            </li>
        }
    </ul>
}