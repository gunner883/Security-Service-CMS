@using umbraco.MacroEngines;
@inherits umbraco.MacroEngines.DynamicNodeContext


@{     
    
    var nodeId = String.IsNullOrEmpty(Parameter.ContentNode) ? 0 : int.Parse(Parameter.ContentNode);
    var root = Library.NodeById(nodeId);    
    
    <h2>@root.Name</h2>
    
    foreach(var node in root.Children)
    {
        <div class="panel-content">
            @RenderItem(node)
        </div>
    }
    
}

@helper RenderItem(DynamicNode node)
{   
    string alias = node.NodeTypeAlias;
    switch(alias)
    {
        case "servicesFolder":
            <h3>@node.Name</h3>
               
                //check to see if the node has children, if so render:
                if(node.ChildrenAsList.Count() > 0)
                {
                    if(node.Children.FirstOrDefault().NodeTypeAlias == "serviceItem")
                    {
                        @RenderFeatures(node);
                    }
                    else
                    {               
                        @RenderItem(node.Children.FirstOrDefault());
                    }
                }
            break;
        case "serviceItem":
            @RenderFeature(node);
            break;
                                          
        default:
            break;
    }
   
}

@helper RenderFeature(DynamicNode node)
{
   var service = Library.NodeById(node.Id);
    
    if (@Library.MediaById(service.itemImage).umbracoFile != "")
    {
        <a href="@service.Url"><img src="@Library.MediaById(service.itemImage).umbracoFile" alt="@service.Name" /></a>
    }
    <h3><a href="@service.Url" >@service.Name</a></h3>
    
    //trim the overview text to 208 characters if its longer. 
    var overview = library.RemoveFirstParagraphTag(service.serviceOverview.ToString());
    if(@overview.Length > 208)
    {
        <p>@overview.Substring(0,208) <a href="@service.Url">...Read more</a></p>
    }
    else
    {
        <p>@overview</p>
    }

}

@helper RenderFeatures(DynamicNode node)
{     
    var services = Library.NodeById(node.Id);
    
    foreach(var service in services.Children)
    {
        RenderFeature(service);
    } 
} 


